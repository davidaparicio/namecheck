name: "Security Scan"

# Run workflow each time code is pushed to your repository and on a schedule.
# The scheduled workflow runs every at 10:13 on Thursday UTC time.
# https://crontab.guru/#13_10_*_*_4
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '13 10 * * 4'

jobs:
  codeql:
    name: Analyze CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  gosec:
    name: Analyze gosec
    runs-on: ubuntu-latest
    needs: [codeql] # sequential
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      GO111MODULE: on
    
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Run Gosec Security Scanner
        uses: securego/gosec@v2.13.1 #master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-fmt sarif -out results.sarif ./...'
          #args: '-no-fail -fmt sarif -out results.sarif ./...'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
        #https://github.com/analysis-tools-dev/static-analysis#go